service: ctsf

provider:
  profile: taskforce
  name: aws
  # The AWS region in which to deploy (us-east-1 is the default)
  region: eu-west-1
  # The stage of the application, e.g. dev, production, stagingâ€¦ ('dev' is the default)
  stage: production
  runtime: provided.al2
  apiGateway:
    binaryMediaTypes:
      - '*/*'
  environment:
    BREF_BINARY_RESPONSES: '1'
    APP_ENV: ${sls:stage}
    APP_DEBUG: false
    DB_HOST: ${ssm:/ctsf/db-host}
    DB_PORT: 5432
    DB_DATABASE: ce_trebuie_sa_fac
    DB_USERNAME: postgres
    DB_PASSWORD: ${ssm:/ctsf/db-password}
    SESSION_DRIVER: database
    CACHE_DRIVER: database
    FILESYSTEM_DRIVER: s3
    FILESYSTEM_CLOUD: s3
    AWS_BUCKET: !Ref Storage
  iam:
    role:
      statements:
        # Allow Lambda to read and write files in the S3 buckets
        - Effect: Allow
          Action: s3:*
          Resource:
            - !Sub '${Storage.Arn}' # the storage bucket
            - !Sub '${Storage.Arn}/*' # and everything inside

package:
  # Directories to exclude from deployment
  patterns:
    - '!node_modules/**'
    - '!public/storage'
    - '!resources/assets/**'
    - '!storage/**'
    - '!tests/**'

functions:
  # This function runs the Laravel website/API
  web:
    handler: public/index.php
    memorySize: 512
    timeout: 28 # in seconds (API Gateway has a timeout of 29 seconds)
    layers:
      - ${bref:layer.php-80-fpm}
      - ${bref-extra:gd-php-80}
    events:
      - httpApi: '*'
      - schedule:
          rate: rate(5 minutes)
          input:
            warmer: true

  # This function lets us run artisan commands in Lambda
  artisan:
    handler: artisan
    memorySize: 512
    timeout: 120 # in seconds
    layers:
      - ${bref:layer.php-80} # PHP
      - ${bref-extra:gd-php-80}
      - ${bref:layer.console} # The "console" layer

constructs:
  website:
    domain: dopomoha.ro
    certificate: ${ssm:/ctsf/certificate-arn}
    type: server-side-website
    assets:
      '/assets/*': public/assets
      '/favicon.ico': public/favicon.ico
      '/robots.txt': public/robots.txt
      # add here any file or directory that needs to be served from S3

plugins:
  - ./vendor/bref/bref
  - ./vendor/bref/extra-php-extensions
  - serverless-lift

resources:
  Resources:
    Storage:
      Type: AWS::S3::Bucket
