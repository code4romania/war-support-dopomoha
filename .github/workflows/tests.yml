name: Tests

on: [push]

jobs:
  test:
    name: PHP ${{ matrix.php-version }} - ${{ matrix.dependency-version }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        php-version:
          - '8.1'
        dependency-version:
          - prefer-stable

    env:
      extensions: mbstring, sqlite, pdo_sqlite, intl, gd

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup cache environment
        id: extcache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php-version }}
          extensions: ${{ env.extensions }}
          key: php-extensions-cache

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.extcache.outputs.dir }}
          key: ${{ steps.extcache.outputs.key }}
          restore-keys: ${{ steps.extcache.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: ${{ env.extensions }}
          coverage: pcov
          tools: composer:v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: dependencies-composer-${{ hashFiles('composer.lock') }}-php-${{ matrix.php-version }}-${{ matrix.dependency-version }}
          restore-keys: dependencies-composer-

      - name: Get npm cache directory
        id: npmcache
        run: echo "::set-output name=dir::$(npm config get cache)"

      - name: Cache npm dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.npmcache.outputs.dir }}
          key: dependencies-npm-${{ hashFiles('package-lock.json') }}
          restore-keys: dependencies-npm-

      - name: Install composer dependencies
        run: composer update --prefer-dist --no-interaction --no-scripts --${{ matrix.dependency-version }}

      - name: Install npm dependencies
        run: npm ci --prefer-offline

      - name: Build frontend
        run: npm run production

      - name: Setup env
        run: composer env

      - name: Run tests
        run: php artisan test
